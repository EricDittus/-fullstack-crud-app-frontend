{"ast":null,"code":"var _jsxFileName = \"/Users/ericdittus/Desktop/-fullstack-crud-app-frontend/src/components/containers/NewInstructorContainer.js\";\nimport Header from \"./Header\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NewInstructorView from \"../views/NewinstructorView\";\nimport { addInstructorThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewInstructorContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      let instructor = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description\n      }; // Add new instructor in back-end database\n\n      let newInstructor = await this.props.addInstructor(instructor); // Update state, and trigger redirect to show the new instructor\n\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        redirect: true,\n        redirectId: newInstructor.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  } // Capture input data when it is entered\n\n\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  } // Render new instructor input form\n\n\n  render() {\n    // Redirect to new instructor's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/instructors/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    } // Display the input form via the corresponding View component\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewInstructorView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following input argument is passed to the \"connect\" function used by \"NewinstructorContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    addinstructor: instructor => dispatch(addInstructorThunk(instructor))\n  };\n}; // Export store-connected container by default\n// NewinstructorContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\n// (and re-read the values when the Store State updates).\n\n\nexport default connect(null, mapDispatch)(NewInstructorContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewInstructorView","addInstructorThunk","NewInstructorContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","instructor","state","address","description","newInstructor","addInstructor","imageUrl","redirect","redirectId","id","componentWillUnmount","render","mapDispatch","dispatch","addinstructor"],"sources":["/Users/ericdittus/Desktop/-fullstack-crud-app-frontend/src/components/containers/NewInstructorContainer.js"],"sourcesContent":["import Header from \"./Header\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NewInstructorView from \"../views/NewinstructorView\";\nimport { addInstructorThunk } from \"../../store/thunks\";\n\nclass NewInstructorContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null,\n    };\n  }\n\n  // Capture input data when it is entered\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Take action after user click the submit button\n  handleSubmit = async (event) => {\n    event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n    let instructor = {\n      name: this.state.name,\n      address: this.state.address,\n      description: this.state.description,\n    };\n\n    // Add new instructor in back-end database\n    let newInstructor = await this.props.addInstructor(instructor);\n\n    // Update state, and trigger redirect to show the new instructor\n    this.setState({\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      redirect: true,\n      redirectId: newInstructor.id,\n    });\n  };\n\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n    this.setState({ redirect: false, redirectId: null });\n  }\n\n  // Render new instructor input form\n  render() {\n    // Redirect to new instructor's page after submit\n    if (this.state.redirect) {\n      return <Redirect to={`/instructors/${this.state.redirectId}`} />;\n    }\n\n    // Display the input form via the corresponding View component\n    return (\n      <div>\n        <Header />\n        <NewInstructorView\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n      </div>\n    );\n  }\n}\n\n// The following input argument is passed to the \"connect\" function used by \"NewinstructorContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    addinstructor: (instructor) => dispatch(addInstructorThunk(instructor)),\n  };\n};\n\n// Export store-connected container by default\n// NewinstructorContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\n// (and re-read the values when the Store State updates).\n\nexport default connect(null, mapDispatch)(NewInstructorContainer);\n"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;;;AAEA,MAAMC,sBAAN,SAAqCL,SAArC,CAA+C;EAC7C;EACAM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAYnBC,YAZmB,GAYHC,KAAD,IAAW;MACxB,KAAKC,QAAL,CAAc;QACZ,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;MADtB,CAAd;IAGD,CAhBkB;;IAAA,KAmBnBC,YAnBmB,GAmBJ,MAAOL,KAAP,IAAiB;MAC9BA,KAAK,CAACM,cAAN,GAD8B,CACN;;MAExB,IAAIC,UAAU,GAAG;QACfJ,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADF;QAEfM,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAFL;QAGfC,WAAW,EAAE,KAAKF,KAAL,CAAWE;MAHT,CAAjB,CAH8B,CAS9B;;MACA,IAAIC,aAAa,GAAG,MAAM,KAAKb,KAAL,CAAWc,aAAX,CAAyBL,UAAzB,CAA1B,CAV8B,CAY9B;;MACA,KAAKN,QAAL,CAAc;QACZE,IAAI,EAAE,EADM;QAEZM,OAAO,EAAE,EAFG;QAGZC,WAAW,EAAE,EAHD;QAIZG,QAAQ,EAAE,EAJE;QAKZC,QAAQ,EAAE,IALE;QAMZC,UAAU,EAAEJ,aAAa,CAACK;MANd,CAAd;IAQD,CAxCkB;;IAEjB,KAAKR,KAAL,GAAa;MACXL,IAAI,EAAE,EADK;MAEXM,OAAO,EAAE,EAFE;MAGXC,WAAW,EAAE,EAHF;MAIXI,QAAQ,EAAE,KAJC;MAKXC,UAAU,EAAE;IALD,CAAb;EAOD,CAX4C,CAa7C;;;EA+BA;EACAE,oBAAoB,GAAG;IACrB,KAAKhB,QAAL,CAAc;MAAEa,QAAQ,EAAE,KAAZ;MAAmBC,UAAU,EAAE;IAA/B,CAAd;EACD,CA/C4C,CAiD7C;;;EACAG,MAAM,GAAG;IACP;IACA,IAAI,KAAKV,KAAL,CAAWM,QAAf,EAAyB;MACvB,oBAAO,QAAC,QAAD;QAAU,EAAE,EAAG,gBAAe,KAAKN,KAAL,CAAWO,UAAW;MAApD;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAJM,CAMP;;;IACA,oBACE;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,iBAAD;QACE,YAAY,EAAE,KAAKhB,YADrB;QAEE,YAAY,EAAE,KAAKM;MAFrB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AAlE4C,C,CAqE/C;AACA;AACA;;;AACA,MAAMc,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLC,aAAa,EAAGd,UAAD,IAAgBa,QAAQ,CAACzB,kBAAkB,CAACY,UAAD,CAAnB;EADlC,CAAP;AAGD,CAJD,C,CAMA;AACA;AACA;;;AAEA,eAAef,OAAO,CAAC,IAAD,EAAO2B,WAAP,CAAP,CAA2BvB,sBAA3B,CAAf"},"metadata":{},"sourceType":"module"}