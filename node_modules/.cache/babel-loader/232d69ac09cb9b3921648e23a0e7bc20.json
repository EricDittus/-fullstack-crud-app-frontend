{"ast":null,"code":"var _jsxFileName = \"/Users/ericdittus/Desktop/-fullstack-crud-app-frontend/src/components/containers/AllCoursesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { deleteCourseThunk, fetchAllCoursesThunk } from '../../store/thunks';\nimport { AllCoursesView } from '../views';\nimport { Button } from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport { Link } from \"react-router-dom\";\nimport { useStyles } from \"../Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCourse = _ref => {\n  let {\n    courseName\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    classname: courseName,\n    to: `newCourse`,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      \"aria-label\": \"Add New Instructor\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 70\n      }, this),\n      children: \"Add New Instructor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 15\n  }, this);\n};\n\n_c = NewCourse;\n\nconst AllCoursesContainer = _ref2 => {\n  _s();\n\n  let {\n    fetchAllCourses,\n    allCourses,\n    deleteCourse\n  } = _ref2;\n  useEffect(fetchAllCourses, [fetchAllCourses]);\n  return /*#__PURE__*/_jsxDEV(AllCoursesView, {\n    Courses: allCourses,\n    deleteCourse: deleteCourse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}; // Map state to props;\n\n\n_s(AllCoursesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = AllCoursesContainer;\n\nconst mapState = state => ({\n  allCourses: state.allCourses\n}); // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => ({\n  fetchAllCourses: () => dispatch(fetchAllCoursesThunk()),\n  deleteCourse: courseId => dispatch(deleteCourseThunk(courseId))\n}); // Type check props;\n\n\nAllCoursesContainer.propTypes = {\n  allCourses: PropTypes.array.isRequired,\n  fetchAllCourses: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(AllCoursesContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewCourse\");\n$RefreshReg$(_c2, \"AllCoursesContainer\");","map":{"version":3,"names":["React","Component","useEffect","PropTypes","connect","deleteCourseThunk","fetchAllCoursesThunk","AllCoursesView","Button","AddCircleIcon","Link","useStyles","NewCourse","courseName","AllCoursesContainer","fetchAllCourses","allCourses","deleteCourse","mapState","state","mapDispatch","dispatch","courseId","propTypes","array","isRequired","func"],"sources":["/Users/ericdittus/Desktop/-fullstack-crud-app-frontend/src/components/containers/AllCoursesContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {useEffect} from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux';\nimport {deleteCourseThunk, fetchAllCoursesThunk} from '../../store/thunks';\nimport {AllCoursesView} from '../views';\nimport {Button} from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport {Link} from \"react-router-dom\";\nimport {useStyles} from \"../Styles\";\n\nconst NewCourse = ({courseName}) => {\n  return (\n              <Link classname = {courseName} to={`newCourse`}>\n                  <Button aria-label=\"Add New Instructor\" startIcon={<AddCircleIcon/>}>\n                      Add New Instructor\n                  </Button>\n              </Link>\n  );\n}\n\n\nconst AllCoursesContainer = ({fetchAllCourses, allCourses, deleteCourse}) => {\n    useEffect(fetchAllCourses, [fetchAllCourses]);\n    return (\n        <AllCoursesView\n            Courses={allCourses}\n            deleteCourse={deleteCourse}\n        />\n    )\n}\n\n// Map state to props;\nconst mapState = state => ({\n    allCourses: state.allCourses,\n\n});\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => ({\n\n    fetchAllCourses: () => dispatch(fetchAllCoursesThunk()),\n    deleteCourse: courseId => dispatch(deleteCourseThunk(courseId)),\n\n});\n\n// Type check props;\nAllCoursesContainer.propTypes = {\n  allCourses: PropTypes.array.isRequired,\n  fetchAllCourses: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(AllCoursesContainer);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,oBAA3B,QAAsD,oBAAtD;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,WAAxB;;;AAEA,MAAMC,SAAS,GAAG,QAAkB;EAAA,IAAjB;IAACC;EAAD,CAAiB;EAClC,oBACY,QAAC,IAAD;IAAM,SAAS,EAAIA,UAAnB;IAA+B,EAAE,EAAG,WAApC;IAAA,uBACI,QAAC,MAAD;MAAQ,cAAW,oBAAnB;MAAwC,SAAS,eAAE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QAAnD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADZ;AAOD,CARD;;KAAMD,S;;AAWN,MAAME,mBAAmB,GAAG,SAAiD;EAAA;;EAAA,IAAhD;IAACC,eAAD;IAAkBC,UAAlB;IAA8BC;EAA9B,CAAgD;EACzEf,SAAS,CAACa,eAAD,EAAkB,CAACA,eAAD,CAAlB,CAAT;EACA,oBACI,QAAC,cAAD;IACI,OAAO,EAAEC,UADb;IAEI,YAAY,EAAEC;EAFlB;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CARD,C,CAUA;;;GAVMH,mB;;MAAAA,mB;;AAWN,MAAMI,QAAQ,GAAGC,KAAK,KAAK;EACvBH,UAAU,EAAEG,KAAK,CAACH;AADK,CAAL,CAAtB,C,CAKA;;;AACA,MAAMI,WAAW,GAAGC,QAAQ,KAAK;EAE7BN,eAAe,EAAE,MAAMM,QAAQ,CAACf,oBAAoB,EAArB,CAFF;EAG7BW,YAAY,EAAEK,QAAQ,IAAID,QAAQ,CAAChB,iBAAiB,CAACiB,QAAD,CAAlB;AAHL,CAAL,CAA5B,C,CAOA;;;AACAR,mBAAmB,CAACS,SAApB,GAAgC;EAC9BP,UAAU,EAAEb,SAAS,CAACqB,KAAV,CAAgBC,UADE;EAE9BV,eAAe,EAAEZ,SAAS,CAACuB,IAAV,CAAeD;AAFF,CAAhC;AAKA,eAAerB,OAAO,CAACc,QAAD,EAAWE,WAAX,CAAP,CAA+BN,mBAA/B,CAAf"},"metadata":{},"sourceType":"module"}